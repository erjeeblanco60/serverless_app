service:
  name: action-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

#export MAIL_QUE_URL from imported CF stack
provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCITONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iamRoleStatements:
    - ${file(../iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(../iam/MailQueueIAM.yml):MailQueueIAM}
    - ${file(../iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}
    # - Effect: Allow
    #   Action:
    #     - dynamodb:PutItem
    #   Resource:
    #     - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/AuctionsTable
resources:
  Resources:
    AuctionsTable: ${file(../resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(../resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(../resources/AuctionsBucket.yml):AuctionsBucketPolicy}
    # AuctionsTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: AuctionsTable
    #     BillingMode: PAY_PER_REQUEST
    #     AttributeDefinitions:
    #       - AttributeName: id
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: id
    #         KeyType: HASH
functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          cors: true
          authorizer: ${self:custom.authorizer}
 
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          cors: true
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          cors: true
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          cors: true
          authorizer: ${self:custom.authorizer}

  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          cors: true
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule: rate(10 minutes)

#export MAIL_QUE_URL from imported CF stack
custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-erjzxc${self:provider.stage}
  bundle:
    linting: false

# sls create --name YOUR_PROJECT_NAME --template-url https://github.com/codingly-io/sls-base
# sls create --name auth-service --template-url https://github.com/codingly-io/serverless-auth0-authorize
# sls create --name YOUR_PROJECT_NAME --template-url https://github.com/codingly-io/sls-base